import React, { useState, useEffect } from 'react';
import {
  Dialog,
  DialogContent,
  DialogTitle,
  Typography,
  Box,
  Button,
  IconButton,
  Stepper,
  Step,
  StepLabel,
  StepContent,
  Paper,
  useTheme,
  useMediaQuery,
} from '@mui/material';
import {
  Close,
  Share,
  AddToHomeScreen,
  Phone,
  CheckCircle,
} from '@mui/icons-material';

interface iOSPWAGuideProps {
  open?: boolean;
  onClose?: () => void;
}

const IOSPWAGuide: React.FC<iOSPWAGuideProps> = ({ open: controlledOpen, onClose }) => {
  const [localOpen, setLocalOpen] = useState(false);
  const [activeStep, setActiveStep] = useState(0);
  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));

  const isOpen = controlledOpen !== undefined ? controlledOpen : localOpen;

  useEffect(() => {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö iOS Safari ‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥
    const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);
    const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
    const isStandalone = window.matchMedia('(display-mode: standalone)').matches;
    const hasShownGuide = localStorage.getItem('ios-pwa-guide-shown');

    // ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞ iOS Safari ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á ‡πÅ‡∏•‡∏∞‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥
    if (isIOS && isSafari && !isStandalone && !hasShownGuide && controlledOpen === undefined) {
      // ‡∏£‡∏≠ 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
      const timer = setTimeout(() => {
        setLocalOpen(true);
      }, 3000);

      return () => clearTimeout(timer);
    }
  }, [controlledOpen]);

  const handleClose = () => {
    setLocalOpen(false);
    localStorage.setItem('ios-pwa-guide-shown', 'true');
    onClose?.();
  };

  const handleNext = () => {
    setActiveStep((prevStep) => prevStep + 1);
  };

  const handleBack = () => {
    setActiveStep((prevStep) => prevStep - 1);
  };

  const steps = [
    {
      label: '‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏ä‡∏£‡πå',
      icon: <Share />,
      content: (
        <Box>
          <Typography variant="body1" sx={{ mb: 2 }}>
            ‡πÅ‡∏ï‡∏∞‡∏õ‡∏∏‡πà‡∏° <strong>"‡πÅ‡∏ä‡∏£‡πå"</strong> ‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏Ç‡∏≠‡∏á Safari
          </Typography>
          <Box sx={{ 
            display: 'flex', 
            justifyContent: 'center',
            mb: 2,
            p: 2,
            bgcolor: 'grey.100',
            borderRadius: '12px',
          }}>
            <Box sx={{ 
              width: 60, 
              height: 60, 
              bgcolor: 'primary.main',
              borderRadius: '12px',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              color: 'white',
            }}>
              <Share sx={{ fontSize: 30 }} />
            </Box>
          </Box>
          <Typography variant="caption" sx={{ color: 'text.secondary' }}>
            üí° ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÄ‡∏´‡πá‡∏ô‡∏õ‡∏∏‡πà‡∏° ‡∏•‡∏≠‡∏á‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢
          </Typography>
        </Box>
      ),
    },
    {
      label: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏´‡∏•‡∏±‡∏Å"',
      icon: <AddToHomeScreen />,
      content: (
        <Box>
          <Typography variant="body1" sx={{ mb: 2 }}>
            ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏•‡∏á‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡πÅ‡∏ï‡∏∞ <strong>"‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏´‡∏•‡∏±‡∏Å"</strong>
          </Typography>
          <Box sx={{ 
            display: 'flex', 
            justifyContent: 'center',
            mb: 2,
            p: 2,
            bgcolor: 'grey.100',
            borderRadius: '12px',
          }}>
            <Box sx={{ 
              width: 60, 
              height: 60, 
              bgcolor: 'success.main',
              borderRadius: '12px',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              color: 'white',
            }}>
              <AddToHomeScreen sx={{ fontSize: 30 }} />
            </Box>
          </Box>
          <Typography variant="caption" sx={{ color: 'text.secondary' }}>
            üîç ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÄ‡∏´‡πá‡∏ô ‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÉ‡∏ô‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏≤ "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏´‡∏•‡∏±‡∏Å"
          </Typography>
        </Box>
      ),
    },
    {
      label: '‡∏Å‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°',
      icon: <CheckCircle />,
      content: (
        <Box>
          <Typography variant="body1" sx={{ mb: 2 }}>
            ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° <strong>"‡πÄ‡∏û‡∏¥‡πà‡∏°"</strong> ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏≠‡∏õ‡∏ö‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏´‡∏•‡∏±‡∏Å
          </Typography>
          <Box sx={{ 
            display: 'flex', 
            justifyContent: 'center',
            mb: 2,
            p: 2,
            bgcolor: 'grey.100',
            borderRadius: '12px',
          }}>
            <Box sx={{ 
              width: 60, 
              height: 60, 
              bgcolor: 'warning.main',
              borderRadius: '12px',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              color: 'white',
            }}>
              <CheckCircle sx={{ fontSize: 30 }} />
            </Box>
          </Box>
          <Typography variant="body2" sx={{ 
            p: 2, 
            bgcolor: 'success.light', 
            color: 'success.contrastText',
            borderRadius: '8px',
            textAlign: 'center',
          }}>
            üéâ ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß! ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î BN Sound System ‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏´‡∏•‡∏±‡∏Å‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢
          </Typography>
        </Box>
      ),
    },
  ];

  if (!isOpen) return null;

  return (
    <Dialog
      open={isOpen}
      onClose={handleClose}
      maxWidth="sm"
      fullWidth
      fullScreen={isMobile}
      sx={{
        '& .MuiDialog-paper': {
          borderRadius: isMobile ? 0 : '20px',
          m: isMobile ? 0 : 2,
        }
      }}
    >
      <DialogTitle sx={{ 
        display: 'flex', 
        justifyContent: 'space-between', 
        alignItems: 'center',
        pb: 1,
      }}>
        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>
          <Phone sx={{ color: 'primary.main' }} />
          <Typography variant="h6" sx={{ fontWeight: 700 }}>
            ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏≠‡∏õ‡∏ö‡∏ô iPhone
          </Typography>
        </Box>
        <IconButton onClick={handleClose} size="small">
          <Close />
        </IconButton>
      </DialogTitle>

      <DialogContent sx={{ pb: 3 }}>
        <Typography variant="body2" sx={{ mb: 3, color: 'text.secondary' }}>
          ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á BN Sound System ‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏õ‡∏ö‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏´‡∏•‡∏±‡∏Å
        </Typography>

        <Stepper activeStep={activeStep} orientation="vertical">
          {steps.map((step, index) => (
            <Step key={step.label}>
              <StepLabel
                optional={
                  index === steps.length - 1 ? (
                    <Typography variant="caption">‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢</Typography>
                  ) : null
                }
                icon={step.icon}
              >
                <Typography variant="subtitle1" sx={{ fontWeight: 600 }}>
                  {step.label}
                </Typography>
              </StepLabel>
              <StepContent>
                <Box sx={{ mb: 2 }}>
                  {step.content}
                </Box>
                <Box sx={{ display: 'flex', gap: 1 }}>
                  {index < steps.length - 1 && (
                    <Button
                      variant="contained"
                      onClick={handleNext}
                      size="small"
                      sx={{ textTransform: 'none' }}
                    >
                      ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
                    </Button>
                  )}
                  {index > 0 && (
                    <Button 
                      onClick={handleBack}
                      size="small"
                      sx={{ textTransform: 'none' }}
                    >
                      ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
                    </Button>
                  )}
                  {index === steps.length - 1 && (
                    <Button
                      variant="contained"
                      onClick={handleClose}
                      size="small"
                      color="success"
                      sx={{ textTransform: 'none' }}
                    >
                      ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô
                    </Button>
                  )}
                </Box>
              </StepContent>
            </Step>
          ))}
        </Stepper>

        {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° */}
        <Paper sx={{ 
          mt: 3, 
          p: 2, 
          bgcolor: 'info.light', 
          color: 'info.contrastText',
          borderRadius: '12px',
        }}>
          <Typography variant="subtitle2" sx={{ fontWeight: 600, mb: 1 }}>
            üí° ‡∏Ç‡πâ‡∏≠‡∏î‡∏µ‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏≠‡∏õ:
          </Typography>
          <Typography variant="body2" component="div">
            ‚Ä¢ üöÄ ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏î‡πâ‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô<br/>
            ‚Ä¢ üì± ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÅ‡∏≠‡∏õ‡∏à‡∏£‡∏¥‡∏á<br/>
            ‚Ä¢ üåê ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡πÅ‡∏°‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏ô‡πá‡∏ï<br/>
            ‚Ä¢ üîî ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô (‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï)
          </Typography>
        </Paper>

        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏Ç‡πâ‡∏≤‡∏° */}
        <Box sx={{ display: 'flex', justifyContent: 'center', mt: 3 }}>
          <Button 
            onClick={handleClose}
            variant="text"
            size="small"
            sx={{ 
              textTransform: 'none',
              color: 'text.secondary',
              '&:hover': {
                bgcolor: 'grey.100',
              }
            }}
          >
            ‡∏Ç‡πâ‡∏≤‡∏°‡πÑ‡∏õ‡∏Å‡πà‡∏≠‡∏ô (‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå)
          </Button>
        </Box>
      </DialogContent>
    </Dialog>
  );
};

export default IOSPWAGuide; 